# Default values for dydx-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: "ghcr.io/charlesjudith/dydxprotocol-docker"
  tag: "v0.0.1-rc1"
  pullPolicy: IfNotPresent

# Common Values

keyring_backend: "test"
home: "/root/.dydxprotocol"
debug: "false"

# Set Values to run a single dydx node connected to an existing network
# Defaults to mainnet
dydxprotocol_node:
  api_enable: "true"
  moniker: StakeLab
  chainid: dydx-testnet-1
  # disable PEX when nodes have issues with syncing / catching up / peer dial errors/flood
  minimum_gas_prices: "0ibc/8E27BA2D5493AF5636760E354E46004562C46AB7EC0CC4C1CA14E9E20E2545B5"
  net: https://raw.githubusercontent.com/CharlesJUDITH/dydxprotocol-docker/main/genesis.json
  peers: 39fcf6096ac61f6c8ab2963256c01580764c50fb@141.95.99.214:16456,3588cd252ffde169b59ee37e317d5606584fba36@18.182.95.191:26656,c7704304c3a9f353222a50ac044ed1a09e44dcf7@3.20.153.106:26656,1b32f951facd435d82aea6f1db97ecd57b09c866@131.153.203.245:26656,47817889aece4dd89753173a3e4d1ee8daeb4898@57.129.17.88:26656,859d94ee0ba60d755d22fff4e24413c0f2944e8b@164.90.235.59:26656,4efe175f8856d36c38829561b6ee65da1374e343@34.247.182.222:26656,f126d1d616c73f110a90b82b42f92ef6022fd598@5.161.211.145:26656,572dd917b5a48eddcdc7726349ec1ba4a1902f84@37.252.184.236:26656,465FCBFE7BDA8D774B5E9CFAA2A0E37A8E03ED96@15.165.150.185:26656,cb067719ef02d086a6675f134f43d14c3ad64d6d@51.38.63.14:26656,1af24d9eb6d11f38198d421c90c0c7ab7479e7c5@65.109.97.62:26656,2cd2afa61a5809f3412bfe12d121cc059e1b838d@146.59.229.12:26656,9063defddef3be97d79521cb0a78fb42b03d0ed6@34.124.245.127:26656,74445ae57f3a5269ad92309711b7a49fb53f629e@141.94.98.35:26656,3068a74b38b3d7fcf977ac2a443734b42c5bada3@46.166.170.50:26656,a3b8d15745b252143dd5f299f7bf9d392dd82139@163.172.184.193:26656,f35c9a54f68984db3f3ccb49f816e4ce29c37658@135.181.216.54:3090,20b4f9207cdc9d0310399f848f057621f7251846@158.247.233.222:26656,e7a0d319a2c815d90d3806d961cab08a47fda339@88.99.143.105:26656,158e639029c4af09285102b5f03f16ce18a75a06@165.22.73.158:26656,ebfff8400f7870dc5d5762ae3ca824d060b1f702@13.214.149.202:26656,e916d1e2e2a830b36ee488770a83a86118cc504b@43.131.41.236:26656,4775d0152d784b3ddf4f48c2d0ebddf961b52655@162.62.119.50:26656,83f100c7530b4d9b46be7f8d8f846a0d31a74498@23.108.108.110:26766,ec96d0ad08281c3226916c66f321e13d8743bc43@65.109.112.162:26656,2450372f556fd2678983fbaa8da4b745e5410d2d@18.200.118.206:26656,d22838d0389f7f3e71d0a089f9a8ad40b9fad733@88.198.8.79:2110,fbed126ff99ac15a1f2dce60b929ac9fafc7897e@173.234.17.224:26656
  seeds: 
  addrbook:
    enabled: false
    url: 

  # Pruning configuration
  pruning: "custom"
  pruning_keep_recent: "100"
  pruning_keep_every: "0"
  pruning_interval: "10"

  iavl_disable_fastnode: true

  proxy_app: "tcp://127.0.0.1:26658"
  block_sync: true
  db_backend: "goleveldb"
  db_dir: "data"
  log_level: "info"
  log_format: "plain"
  genesis_file: "config/genesis.json"
  priv_validator_state_file: "data/priv_validator_state.json"
  priv_validator_key_file: "config/priv_validator_key.json"
  node_key_file: "config/node_key.json"
  abci: "socket"
  filter_peers: false
  rpc:
    laddr: "tcp://0.0.0.0:26657"
    cors_allowed_origins: "[*, ]"
    cors_allowed_methods: "['HEAD', 'GET', 'POST']"
    cors_allowed_headers: "['Origin', 'Accept', 'Content-Type', 'X-Requested-With', 'X-Server-Time']"
    grpc_laddr: ""
    grpc_max_open_connections: 900
    unsafe: false
    max_open_connections: 900
    max_subscription_clients: 100
    max_subscriptions_per_client: 5
    experimental_subscription_buffer_size: 200
    experimental_websocket_write_buffer_size: 200
    experimental_close_on_slow_client: false
    timeout_broadcast_tx_commit: "10s"
    max_body_bytes: 1000000
    max_header_bytes: 1048576
    tls_cert_file: ""
    tls_key_file: ""
    pprof_laddr: "localhost:6060"
  p2p:
    laddr: "tcp://0.0.0.0:26656"
    external_address: ""
    upnp: false
    addr_book_file: "config/addrbook.json"
    addr_book_strict: true
    max_num_inbound_peers: 40
    max_num_outbound_peers: 10
    unconditional_peer_ids: ""
    persistent_peers_max_dial_period: "0s"
    flush_throttle_timeout: "100ms"
    max_packet_msg_payload_size: 1024
    send_rate: 5120000
    recv_rate: 5120000
    pex: true
    seed_mode: false
    private_peer_ids: ""
    allow_duplicate_ip: false
    handshake_timeout: "20s"
    dial_timeout: "3s"
  mempool:
    version: "v1"
    recheck: true
    broadcast: true
    wal_dir: ""
    size: 5000
    max_txs_bytes: 1073741824
    cache_size: 20000
    keep-invalid-txs-in-cache: true
    max_tx_bytes: 1048576
    max_batch_bytes: 0
    ttl-duration: "0s"
    ttl-num-blocks: 20
  statesync:
    enable: false
    rpc_servers: ""
    trust_height: 0
    trust_hash: ""
    trust_period: "168h0m0s"
    discovery_time: "15s"
    temp_dir: ""
    chunk_request_timeout: "10s"
    chunk_fetchers: "4"
  blocksync:
    version: "v0"
  consensus:
    wal_file: "data/cs.wal/wal"
    timeout_propose: "3s"
    timeout_propose_delta: "500ms"
    timeout_prevote: "1s"
    timeout_prevote_delta: "500ms"
    timeout_precommit: "1s"
    timeout_precommit_delta: "500ms"
    timeout_commit: "999ms"
    double_sign_check_height: 0
    skip_timeout_commit: false
    create_empty_blocks: true
    create_empty_blocks_interval: "0s"
    peer_gossip_sleep_duration: "100ms"
    peer_query_maj23_sleep_duration: "2s"
  storage:
    discard_abci_responses: false
  tx_index:
    indexer: "kv"
    psql-conn: ""
  instrumentation:
    prometheus: true
    prometheus_listen_addr: ":26660"
    max_open_connections: 900
    namespace: "cometbft"

  halt_height: 0
  halt_time: 0
  min_retain_blocks: 0
  inter_block_cache: true
  index_events: "[]"
  iavl_cache_size: 781250
  iavl-disable-fastnode: false
  iavl_lazy_loading: false
  app_db_backend: ""

  telemetry:
    enabled: true
    serviceName: ""
    enableHostname: false
    enableHostnameLabel: false
    enableServiceLabel: false
    prometheusRetentionTime: 60
    globalLabels: "[]"

  api:
    enable: true
    swagger: false
    address: "tcp://0.0.0.0:1317"
    maxOpenConnections: 1000
    rpcReadTimeout: 10
    rpcWriteTimeout: 0
    rpcMaxBodyBytes: 1000000
    enabledUnsafeCors: false

  rosetta:
    enable: false
    address: ":8080"
    blockchain: "app"
    network: "network"
    retries: 3
    offline: false
    enable_fee_suggestion: false
    gas_to_suggest: 200000
    denom_to_suggest: "uatom"

  grpc:
    enable: true
    address: "0.0.0.0:9090"
    max_recv_msg_size: "10485760"
    max_send_msg_size: "2147483647"
  grpcWeb:
    enable: true
    address: "0.0.0.0:9091"
    enableUnsafeCors: false
  stateSync:
    snapshotInterval: 0
    snapshotKeepRecent: 2

  store:
    streamers: "[]"
  streamers:
    file:
      keys: "['*', ]"
      writeDir: ""
      prefix: ""
      outputMetadata: true
      stopNodeOnError: true
      fsync: false

  mempool:
    max_txs: 5000

state_sync:
  enabled: false
  rpc1: ""
  node_id: ""
  # height_offset should equal the DYDX_STATE_SYNC_SNAPSHOT_INTERVAL on the node which makes the state-sync snapshots
  height_offset: 2000

snapshots:
  enabled: false

microk8s:
  enabled: true
  hostpath: /data/dydx-validator

# Used for mounting DYDX_HOME on a specific node
local_storage:
  enabled: false
  capacity: 100Gi
  path: /data/dydx-validator
  host: ""

# If the node is a validator
validator:
  enabled: true
  node_key: ""
  priv_key: ""
  tmkms: false
  
# If the node is a fullnode (non-validator)
fullnode:
  enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: false
  domain: "dmain.tld"

service:
  type: LoadBalancer
  loadBalancerIP: 65.109.112.162
  p2p: 26656
  rpc: 26657
  grpc: 9090
  rest: 1317
  grpc: 909