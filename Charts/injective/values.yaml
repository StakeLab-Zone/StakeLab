# Default values for injective-node.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: "ghcr.io/charlesjudith/injective-docker"
  tag: "v1.12.0"
  pullPolicy: IfNotPresent

# Common Values

keyring_backend: "test"
home: "/root/.injectived"
debug: "false"

# Set Values to run a single Injective node connected to an existing network
# Defaults to mainnet
injective_node:
  snapshot_provider: "polkachu"
  api_enable: "false"
  moniker: yourminikerhere
  chainid: injective-1
  minimum_gas_prices: 500000000inj
  net: https://snapshots.polkachu.com/genesis/injective/genesis.json
  peers: 
  seeds: 38c18461209694e1f667ff2c8636ba827cc01c86@176.9.143.252:11751,4f9025feca44211eddc26cd983372114947b2e85@176.9.140.49:11751,c98bb1b889ddb58b46e4ad3726c1382d37cd5609@65.109.51.80:11751,23d0eea9bb42316ff5ea2f8b4cd8475ef3f35209@65.109.36.70:11751,f9ae40fb4a37b63bea573cc0509b4a63baa1a37a@15.235.114.80:11751,7f3473ddab10322b63789acb4ac58647929111ba@15.235.13.116:11751,ade4d8bc8cbe014af6ebdf3cb7b1e9ad36f412c0@seeds.polkachu.com:14356,ebc272824924ea1a27ea3183dd0b9ba713494f83@injective-mainnet-seed.autostake.com:26726,1846e76e14913124a07e231586d487a0636c0296@tenderseed.ccvalidators.com:26007
  addrbook:
    enabled: true
    url: https://snapshots.polkachu.com/addrbook/injective/addrbook.json

  # Pruning configuration
  pruning: "custom"
  pruning_keep_recent: "100"
  pruning_keep_every: "0"
  pruning_interval: "10"

  iavl_disable_fastnode: true

  proxy_app: "tcp://127.0.0.1:26658"
  fast_sync: true
  db_backend: "goleveldb"
  db_dir: "data"
  log_level: "info"
  log_format: "plain"
  genesis_file: "config/genesis.json"
  priv_validator_state_file: "data/priv_validator_state.json"
  priv_validator_key_file: "config/priv_validator_key.json"
  node_key_file: "config/node_key.json"
  abci: "socket"
  filter_peers: false
  rpc:
    laddr: "tcp://127.0.0.1:26657"
    cors_allowed_origins: "[]"
    cors_allowed_methods: "['HEAD', 'GET', 'POST']"
    cors_allowed_headers: "['Origin', 'Accept', 'Content-Type', 'X-Requested-With', 'X-Server-Time']"
    grpc_laddr: ""
    grpc_max_open_connections: 900
    unsafe: false
    max_open_connections: 900
    max_subscription_clients: 100
    max_subscriptions_per_client: 5
    experimental_subscription_buffer_size: 200
    experimental_websocket_write_buffer_size: 200
    experimental_close_on_slow_client: false
    timeout_broadcast_tx_commit: "50s"
    max_body_bytes: 8388608
    max_header_bytes: 1048576
    tls_cert_file: ""
    tls_key_file: ""
    pprof_laddr: "localhost:6060"
  p2p:
    laddr: "tcp://0.0.0.0:26656"
    external_address: ""
    upnp: false
    addr_book_file: "config/addrbook.json"
    addr_book_strict: true
    max_num_inbound_peers: 40
    max_num_outbound_peers: 10
    unconditional_peer_ids: ""
    persistent_peers_max_dial_period: "0s"
    flush_throttle_timeout: "10ms"
    max_packet_msg_payload_size: 1024
    send_rate: 5120000
    recv_rate: 5120000
    pex: true
    seed_mode: false
    private_peer_ids: ""
    allow_duplicate_ip: false
    handshake_timeout: "20s"
    dial_timeout: "3s"
  mempool:
    version: "v1"
    recheck: true
    broadcast: true
    wal_dir: ""
    size: 5000
    max_txs_bytes: 39485440
    cache_size: 10000
    keep-invalid-txs-in-cache: false
    max_tx_bytes: 7897088
    max_batch_bytes: 0
    ttl-duration: "1m15s"
    ttl-num-blocks: 5
  statesync:
    enable: false
    rpc_servers: ""
    trust_height: 0
    trust_hash: ""
    trust_period: "168h0m0s"
    discovery_time: "15s"
    temp_dir: ""
    chunk_request_timeout: "10s"
    chunk_fetchers: "4"
  fastsync:
    version: "v0"
  consensus:
    wal_file: "data/cs.wal/wal"
    timeout_propose: "3s"
    timeout_propose_delta: "500ms"
    timeout_prevote: "1s"
    timeout_prevote_delta: "500ms"
    timeout_precommit: "1s"
    timeout_precommit_delta: "500ms"
    timeout_commit: "5s"
    double_sign_check_height: 0
    skip_timeout_commit: false
    create_empty_blocks: true
    create_empty_blocks_interval: "0s"
    peer_gossip_sleep_duration: "10ms"
    peer_query_maj23_sleep_duration: "2s"
  storage:
    discard_abci_responses: true
  tx_index:
    indexer: "kv"
    psql-conn: ""
  instrumentation:
    prometheus: true
    prometheus_listen_addr: ":26660"
    max_open_connections: 900
    namespace: "tendermint"

  halt_height: 0
  halt_time: 0
  min_retain_blocks: 0
  inter_block_cache: true
  index_events: "[]"
  iavl_cache_size: 781250

  telemetry:
    enabled: false
    serviceName: ""
    enableHostname: false
    enableHostnameLabel: false
    enableServiceLabel: false
    prometheusRetentionTime: 0
    globalLabels: "[]"

  api:
    enable: false
    swagger: false
    address: "tcp://0.0.0.0:1317"
    maxOpenConnections: 1000
    rpcReadTimeout: 10
    rpcWriteTimeout: 0
    rpcMaxBodyBytes: 1000000
    enabledUnsafeCors: false

  rosetta:
    enable: false
    address: ":8080"
    blockchain: "app"
    network: "network"
    retries: 3
    offline: false

  grpc:
    enable: true
    address: "0.0.0.0:9090"
  grpcWeb:
    enable: true
    address: "0.0.0.0:9091"
    enableUnsafeCors: false
  stateSync:
    snapshotInterval: 0
    snapshotKeepRecent: 2

  store:
    streamers: "[]"
  streamers:
    file:
      keys: "['*', ]"
      writeDir: ""
      prefix: ""
      outputMetadata: true
      stopNodeOnError: true
      fsync: false

# If your node gets connection troubles to Polkachu,
# make sure to get through the trouble-shooting section at
state_sync:
  enabled: false
  rpc1: "https://injective-rpc.polkachu.com:443"
  node_id: ""
  # height_offset should equal the INJECTIVE_STATE_SYNC_SNAPSHOT_INTERVAL on the node which makes the state-sync snapshots
  height_offset: 2000

snapshots:
  enabled: false

microk8s:
  enabled: true
  hostpath: /data/injective-validator

# Used for mounting INJECTIVE_HOME on a specific node
local_storage:
  enabled: false
  capacity: 100Gi
  path: /data/injective-validator
  host: ""

# If the node is a validator
validator:
  enabled: true
  node_key: ""
  priv_key: ""
  tmkms: false
  
# If the node is a fullnode (non-validator)
fullnode:
  enabled: false

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

ingress:
  enabled: false
  tls: false
  domain: "dmain.tld"
  grpc:
    enabled: false
    tls: false

monitoring:
  enabled: false
  # Monitoring namespace
  namespace: observability
  # Prometheus Operator version
  promReleaseName: prometheus-stack
  name: injective-metrics
